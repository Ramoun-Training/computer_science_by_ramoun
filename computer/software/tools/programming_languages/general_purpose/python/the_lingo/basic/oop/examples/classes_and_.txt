```python
class c1:
	pass
```

`dir(cl)`
note: when you create a class, the class inherites.the class object from the standard library with the special variables.

```python
class c:
	def __init__(self):
		print(self) # <__main__.c1 object at 0x7f71dfe54700>
		# now the old value hold in 'self' is no discarded
		self = 'somestring'
		print(self) # 'somestring'
	
```
note: the `self` variable holds the <object address 0x2323323>. if self='somestring' is executed, a new value is assigned to the variable and the old value(<__main__.c1 object at 0x7f71dfe54700>) is discarded.
That's why it didn't affect anything.
btw: after the function is finished execution all local vars are freed.

note: when an already assigned  variable is assigned another value, the old value is deleted from memory.
TypeError: __init__() should return None, not 'str'
