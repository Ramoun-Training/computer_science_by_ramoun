if statement:
=============
Structure for multiple statements inside if/else
------------------------------------------------
if (boolean expression/boolean assignment statement){
    someStatement;//(if clause)
}
else{
    otherStatement;//(else clause)
}

Structure for single statement within if/else
---------------------------------------------
if (boolean expression/boolean assignment statement)
    someStaement;//(if clause)
else
    otherStatement;//(else clause)

/*
The program sometimes compiles without errors,
but the program’s run may not do what you expect it to do. (So the bottom line
is, don’t omit the curly braces.)
*/
                ---------------------------------------
NOTE:
if is an example of a compound statement.
compound statement:a statement that includes other statements within it.

NOTE:
✓ The condition must be in parentheses.
✓ Statements inside the if clause end with semicolons. So do statements
  inside the else clause.
✓ Else keyword should be written imediately after if'clause.
✓ There’s no semicolon immediately after the condition.(logic error)
✓ There’s no semicolon immediately after the word else.(logic error)

NOTE:
you can use braces anywhere in your program as you want although it is not recommended.
just a simple semicolon can mean a termnated empty statement.

i.e:
        if(x==123)System.out.println("good");//if clause ends here
		//System.out.println("hahahah");//a statement out of the if scope
		else ;//else clause ends here
		System.out.println("BAD");//a statement that will execute anyway

if statement’s skeletal outline:
================================
if () { //To do: Fill in the condition.
 //To do: Fill in SomeStatements.
} else {
 //To do: Fill in OtherStatements.
}
NOTE:
With the entire outline in place, you can start working on the items on your
to-do list. When you apply this kind of thinking to a compound statement, it’s
harder to make a mistake.

NOTE:
Take care of indention with curley braces.
It's recommended to use the multiple statments structure even with single statements.
***I wish that there is an ide that can do this -|
casting(!warnning),
------------------------------------------------------------------
NOTE:
the if/else statement is treated as a single statement form the point of view of
the program (even if the 'if'clause has multiple statements).

Random Class:
=============
Structure:
----------
import java.util.Random //calling for the random class for one time from the java api.

class something{
    public static void main(String args[]){
        Random random_object=new Random();//creating an object from class random
        int random_number=random_object.nextInt(10);//Since random_object is an object from class random
        //it can use all of it is methods.
        //the nextInt(10) generates number from 0 to 9
    }
}//at the same time Random is a non-primitive data type constracted with a class.

NOTE:
In Java’s API, the word Random is the name of a Java class, and nextInt
is the name of a Java method. For more information on the relationship
between classes and methods, see Chapters 17, 18, and 19.

Randomness makes me dizzy:
==========================
When runinng the random numbers program several times i get different results each time.

✓ There’s no obvious way to predict what number comes next.
✓ No number occurs much more often than any of the others.

cranking out numbers in a random fashion is a very tricky business.
Here are some interesting facts about the process:
✓ Scientists and nonscientists use the term random number.
  But in reality, there’s no such thing as a single random number.
  After all, how random is a number like 9?
        A number is random only when it’s one in a very disorderly collection of numbers.
        More precisely, a number is random if the process used to generate the number follows
        the two preceding trends.
        When they’re being careful, scientists avoid the term random number and use the term randomly
        generated number instead.
✓ It’s hard to generate numbers randomly.
  Computer programs do the best they can,but ultimately, today’s computer programs
  follow a pattern, and that pattern isn’t truly random.
✓ To generate numbers in a truly random fashion, you need a big tub of ping-pong balls,
  like the kind they use in state lottery drawings. The problem is, most computers don’t
  come with big tubs of ping-pong balls among their peripherals. So strictly speaking, the
  numbers generated by Java’s Random class aren’t random. Instead, scientists call
  these numbers pseudorandom.

NOTE:
...or else what?
if (Condition) {
 SomeStatements
}

NOTE:You can do assignment as a part of the (if condition) but you can't
     make an assignment statement the (if condition) because there is no conversion between
     boolean and other data types in java-but it is possible in other languages like C-.
        boolean x;
		if( x=2 == 2) {
			System.out.println("hahaha");
		}
NOTE:
after the computer decides which way to go to when executing the if statement.
the computer starts executing the rest of code after the if statement.

NOTE:
you cannot print an uninitialized variable or you'll get an error.

block is a statement:
=====================
An elegant way to think about if statements is to realize that you can put only one statement
inside each clause of an if statement.
technically, the if clause in Listing 9-4 has only one statement, and the else clause
in Listing 9-4 has only one statement.
The trick is, when you surround a bunch of statements with curly braces, you get what’s called
a block, and a block behaves, in all respects,like a single statement.
The official Java documentation lists a block as a kind of statement
(one of many different kinds of statements).

static import:
==============
static import is the ability to abbreviate things.
|       import static java.lang.System.out;
//Now I can replace System.out with plain out in the remainder of the program.
NOTE:
the ability to abbreviate things like (System.out.print) is available from Java 5.0 onward.
(An older Java compiler just chokes on the code in Listing 9-4.)
NOTE:
Some questions will be answered in chapter 8.
